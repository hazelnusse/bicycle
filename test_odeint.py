from scipy.integrate import odeint
from pendulum_goal import *
from numpy import linspace, array, sin
from pylab import plot, show

ti = 0.0
tf = 10.0
t = linspace(ti, tf, 100)
g = 9.81
m = 1.0
l = 1.0
z = 0.0
# Using a nested list so that we pass parameters via odeint, and allow those
# parameters to be modified within our ODE function.  This would be used to
# modify the z values generated by Autolev, and 
params = [g, l, m, z]

x = zeros((len(t), 2))
x[0] = array([0.1, 0.2])
#print x

for i in range(len(t)-1):
    t_int = [t[i], t[i+1]]

    test = odeint(pendulum_f, x[i], t_int, args=(params,))
    # causes z element of params to be modified using the latest state estimate
    pendulum_f(test[1,:], t[i+1], params)
    x[i+1] = test[1,:]
    # this guy is being calculated inside of pendulum_f
    print "params =", params[3]
    # this guy is being calculated right now:w
    print "sin(x[i + 1][0] =", sin(x[i + 1, 0])


plot(t, x[:,0])
show()
